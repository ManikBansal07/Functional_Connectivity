{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Major Project/Functional Connectivity Website/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [processingStage, setProcessingStage] = useState('');\n  const MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\n\n  const validateFile = file => {\n    if (!file) {\n      throw new Error('No file selected');\n    }\n    if (file.size > MAX_FILE_SIZE) {\n      throw new Error(`File size exceeds the maximum limit of ${MAX_FILE_SIZE / (1024 * 1024)}MB`);\n    }\n    const validExtensions = ['.nii', '.nii.gz'];\n    const fileExtension = file.name.toLowerCase().slice(file.name.lastIndexOf('.'));\n    if (!validExtensions.includes(fileExtension)) {\n      throw new Error('Invalid file format. Please upload a NIfTI file (.nii or .nii.gz)');\n    }\n  };\n  const onDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    setResults(null);\n    setFileInfo(null);\n    setUploadProgress(0);\n    setProcessingStage('Validating file...');\n    try {\n      validateFile(file);\n      setProcessingStage('Uploading file...');\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      setProcessingStage('Processing results...');\n      setResults(response.data);\n      setFileInfo(response.data.image_info);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      let errorMessage = 'An error occurred while processing the file';\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        errorMessage = err.response.data.error;\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n      setProcessingStage('');\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/x-nifti': ['.nii', '.nii.gz']\n    },\n    multiple: false,\n    maxSize: MAX_FILE_SIZE\n  });\n  const renderMatrix = matrix => {\n    if (!matrix) return null;\n    const maxValue = Math.max(...matrix.flat());\n    const minValue = Math.min(...matrix.flat());\n    const range = maxValue - minValue;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matrix-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'rgba(0, 128, 255, 1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Strong Connection (\", maxValue.toFixed(2), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'rgba(0, 128, 255, 0.5)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Medium Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'rgba(0, 128, 255, 0)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Weak Connection (\", minValue.toFixed(2), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: matrix.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, j) => {\n              const normalizedValue = (cell - minValue) / range;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  backgroundColor: `rgba(0, 128, 255, ${normalizedValue})`\n                },\n                title: `Value: ${cell.toFixed(3)}`,\n                children: cell.toFixed(2)\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Brain Connectivity Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload your NIfTI file to analyze brain connectivity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: `dropzone ${isDragActive ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drop the brain imaging file here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag and drop a NIfTI file here, or click to select one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-types\",\n              children: \"Supported formats: .nii, .nii.gz (Max size: 100MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: processingStage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-text\",\n            children: [uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-help\",\n          children: \"Please ensure you're uploading a valid NIfTI file (.nii or .nii.gz) under 100MB.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), fileInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"File Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Image Shape: \", fileInfo.shape.join(' x ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Header: \", fileInfo.header]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectome-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Connectome Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), results.connectome_image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/${results.connectome_image}`,\n            alt: \"Brain Connectome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connectome visualization will be available after ML model integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectivity-matrix\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Connectivity Matrix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"matrix-description\",\n            children: \"The matrix shows the strength of connections between different brain regions. Hover over cells to see exact values.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), renderMatrix(results.connectivity_matrix)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Prepare your NIfTI file (.nii or .nii.gz format)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Upload the file using the drag-and-drop area or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Wait for the processing to complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"View the connectivity matrix and connectome visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note\",\n          children: \"Note: The connectome visualization will be available once the ML model is integrated.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NflWcjh1HcMQc+q0WAYbHbVAQg4=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useDropzone","axios","jsxDEV","_jsxDEV","App","_s","results","setResults","loading","setLoading","error","setError","fileInfo","setFileInfo","uploadProgress","setUploadProgress","processingStage","setProcessingStage","MAX_FILE_SIZE","validateFile","file","Error","size","validExtensions","fileExtension","name","toLowerCase","slice","lastIndexOf","includes","onDrop","acceptedFiles","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","data","image_info","err","_err$response","_err$response$data","errorMessage","message","getRootProps","getInputProps","isDragActive","accept","multiple","maxSize","renderMatrix","matrix","maxValue","max","flat","minValue","min","range","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","row","i","cell","j","normalizedValue","title","width","shape","join","header","connectome_image","src","alt","connectivity_matrix","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Major Project/Functional Connectivity Website/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [processingStage, setProcessingStage] = useState('');\n\n  const MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\n\n  const validateFile = (file) => {\n    if (!file) {\n      throw new Error('No file selected');\n    }\n\n    if (file.size > MAX_FILE_SIZE) {\n      throw new Error(`File size exceeds the maximum limit of ${MAX_FILE_SIZE / (1024 * 1024)}MB`);\n    }\n\n    const validExtensions = ['.nii', '.nii.gz'];\n    const fileExtension = file.name.toLowerCase().slice(file.name.lastIndexOf('.'));\n    if (!validExtensions.includes(fileExtension)) {\n      throw new Error('Invalid file format. Please upload a NIfTI file (.nii or .nii.gz)');\n    }\n  };\n\n  const onDrop = async (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n\n    setLoading(true);\n    setError(null);\n    setResults(null);\n    setFileInfo(null);\n    setUploadProgress(0);\n    setProcessingStage('Validating file...');\n\n    try {\n      validateFile(file);\n      \n      setProcessingStage('Uploading file...');\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        onUploadProgress: (progressEvent) => {\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(progress);\n        },\n      });\n\n      setProcessingStage('Processing results...');\n      setResults(response.data);\n      setFileInfo(response.data.image_info);\n    } catch (err) {\n      let errorMessage = 'An error occurred while processing the file';\n      if (err.response?.data?.error) {\n        errorMessage = err.response.data.error;\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n      setProcessingStage('');\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/x-nifti': ['.nii', '.nii.gz'],\n    },\n    multiple: false,\n    maxSize: MAX_FILE_SIZE,\n  });\n\n  const renderMatrix = (matrix) => {\n    if (!matrix) return null;\n    \n    const maxValue = Math.max(...matrix.flat());\n    const minValue = Math.min(...matrix.flat());\n    const range = maxValue - minValue;\n\n    return (\n      <div className=\"matrix-container\">\n        <div className=\"matrix-legend\">\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'rgba(0, 128, 255, 1)' }}></span>\n            <span>Strong Connection ({maxValue.toFixed(2)})</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'rgba(0, 128, 255, 0.5)' }}></span>\n            <span>Medium Connection</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'rgba(0, 128, 255, 0)' }}></span>\n            <span>Weak Connection ({minValue.toFixed(2)})</span>\n          </div>\n        </div>\n        <table>\n          <tbody>\n            {matrix.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => {\n                  const normalizedValue = (cell - minValue) / range;\n                  return (\n                    <td \n                      key={j}\n                      style={{\n                        backgroundColor: `rgba(0, 128, 255, ${normalizedValue})`,\n                      }}\n                      title={`Value: ${cell.toFixed(3)}`}\n                    >\n                      {cell.toFixed(2)}\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Brain Connectivity Analysis</h1>\n        <p>Upload your NIfTI file to analyze brain connectivity</p>\n      </header>\n\n      <main>\n        <div className=\"upload-section\">\n          <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <p>Drop the brain imaging file here...</p>\n            ) : (\n              <div>\n                <p>Drag and drop a NIfTI file here, or click to select one</p>\n                <p className=\"file-types\">Supported formats: .nii, .nii.gz (Max size: 100MB)</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n            <p>{processingStage}</p>\n            {uploadProgress > 0 && (\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-bar-fill\"\n                  style={{ width: `${uploadProgress}%` }}\n                ></div>\n                <span className=\"progress-text\">{uploadProgress}%</span>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"error\">\n            <h3>Error</h3>\n            <p>{error}</p>\n            <p className=\"error-help\">Please ensure you're uploading a valid NIfTI file (.nii or .nii.gz) under 100MB.</p>\n          </div>\n        )}\n\n        {fileInfo && (\n          <div className=\"file-info\">\n            <h3>File Information</h3>\n            <p>Image Shape: {fileInfo.shape.join(' x ')}</p>\n            <p>Header: {fileInfo.header}</p>\n          </div>\n        )}\n\n        {results && (\n          <div className=\"results\">\n            <h2>Analysis Results</h2>\n            \n            <div className=\"connectome-image\">\n              <h3>Connectome Visualization</h3>\n              {results.connectome_image ? (\n                <img \n                  src={`http://localhost:5000/${results.connectome_image}`} \n                  alt=\"Brain Connectome\" \n                />\n              ) : (\n                <p>Connectome visualization will be available after ML model integration</p>\n              )}\n            </div>\n\n            <div className=\"connectivity-matrix\">\n              <h3>Connectivity Matrix</h3>\n              <p className=\"matrix-description\">\n                The matrix shows the strength of connections between different brain regions.\n                Hover over cells to see exact values.\n              </p>\n              {renderMatrix(results.connectivity_matrix)}\n            </div>\n          </div>\n        )}\n\n        <div className=\"help-section\">\n          <h3>How to Use</h3>\n          <ol>\n            <li>Prepare your NIfTI file (.nii or .nii.gz format)</li>\n            <li>Upload the file using the drag-and-drop area or click to select</li>\n            <li>Wait for the processing to complete</li>\n            <li>View the connectivity matrix and connectome visualization</li>\n          </ol>\n          <p className=\"note\">Note: The connectome visualization will be available once the ML model is integrated.</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}